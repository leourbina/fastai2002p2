# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/course22p2',
                'doc_host': 'https://fastai.github.io',
                'git_url': 'https://github.com/fastai/course22p2',
                'lib_path': 'miniai'},
  'syms': { 'miniai.accel': { 'miniai.accel.AccelerateCB': ('ddpm_v2.html#acceleratecb', 'miniai/accel.py'),
                              'miniai.accel.AccelerateCB.__init__': ('ddpm_v2.html#acceleratecb.__init__', 'miniai/accel.py'),
                              'miniai.accel.AccelerateCB.backward': ('ddpm_v2.html#acceleratecb.backward', 'miniai/accel.py'),
                              'miniai.accel.AccelerateCB.before_fit': ('ddpm_v2.html#acceleratecb.before_fit', 'miniai/accel.py'),
                              'miniai.accel.MixedPrecision': ('ddpm_v2.html#mixedprecision', 'miniai/accel.py'),
                              'miniai.accel.MixedPrecision.after_loss': ('ddpm_v2.html#mixedprecision.after_loss', 'miniai/accel.py'),
                              'miniai.accel.MixedPrecision.backward': ('ddpm_v2.html#mixedprecision.backward', 'miniai/accel.py'),
                              'miniai.accel.MixedPrecision.before_batch': ('ddpm_v2.html#mixedprecision.before_batch', 'miniai/accel.py'),
                              'miniai.accel.MixedPrecision.before_fit': ('ddpm_v2.html#mixedprecision.before_fit', 'miniai/accel.py'),
                              'miniai.accel.MixedPrecision.step': ('ddpm_v2.html#mixedprecision.step', 'miniai/accel.py')},
            'miniai.activations': { 'miniai.activations.ActivationStats': ( 'clean/activations.html#activationstats',
                                                                            'miniai/activations.py'),
                                    'miniai.activations.ActivationStats.__init__': ( 'clean/activations.html#activationstats.__init__',
                                                                                     'miniai/activations.py'),
                                    'miniai.activations.ActivationStats.color_dim': ( 'clean/activations.html#activationstats.color_dim',
                                                                                      'miniai/activations.py'),
                                    'miniai.activations.ActivationStats.dead_chart': ( 'clean/activations.html#activationstats.dead_chart',
                                                                                       'miniai/activations.py'),
                                    'miniai.activations.ActivationStats.plot_stats': ( 'clean/activations.html#activationstats.plot_stats',
                                                                                       'miniai/activations.py'),
                                    'miniai.activations.ActivationsHook': ( 'clean/activations.html#activationshook',
                                                                            'miniai/activations.py'),
                                    'miniai.activations.ActivationsHook.__call__': ( 'clean/activations.html#activationshook.__call__',
                                                                                     'miniai/activations.py'),
                                    'miniai.activations.ActivationsHook.__init__': ( 'clean/activations.html#activationshook.__init__',
                                                                                     'miniai/activations.py'),
                                    'miniai.activations.HistogramHook': ('clean/activations.html#histogramhook', 'miniai/activations.py'),
                                    'miniai.activations.HistogramHook.__call__': ( 'clean/activations.html#histogramhook.__call__',
                                                                                   'miniai/activations.py'),
                                    'miniai.activations.HistogramHook.__init__': ( 'clean/activations.html#histogramhook.__init__',
                                                                                   'miniai/activations.py'),
                                    'miniai.activations.Hook': ('clean/activations.html#hook', 'miniai/activations.py'),
                                    'miniai.activations.Hook.__call__': ('clean/activations.html#hook.__call__', 'miniai/activations.py'),
                                    'miniai.activations.Hook.__del__': ('clean/activations.html#hook.__del__', 'miniai/activations.py'),
                                    'miniai.activations.Hook.__init__': ('clean/activations.html#hook.__init__', 'miniai/activations.py'),
                                    'miniai.activations.Hook.remove': ('clean/activations.html#hook.remove', 'miniai/activations.py'),
                                    'miniai.activations.Hooks': ('clean/activations.html#hooks', 'miniai/activations.py'),
                                    'miniai.activations.Hooks.__del__': ('clean/activations.html#hooks.__del__', 'miniai/activations.py'),
                                    'miniai.activations.Hooks.__delitem__': ( 'clean/activations.html#hooks.__delitem__',
                                                                              'miniai/activations.py'),
                                    'miniai.activations.Hooks.__enter__': ( 'clean/activations.html#hooks.__enter__',
                                                                            'miniai/activations.py'),
                                    'miniai.activations.Hooks.__exit__': ('clean/activations.html#hooks.__exit__', 'miniai/activations.py'),
                                    'miniai.activations.Hooks.__init__': ('clean/activations.html#hooks.__init__', 'miniai/activations.py'),
                                    'miniai.activations.Hooks.remove': ('clean/activations.html#hooks.remove', 'miniai/activations.py'),
                                    'miniai.activations.HooksCB': ('clean/activations.html#hookscb', 'miniai/activations.py'),
                                    'miniai.activations.HooksCB.__init__': ( 'clean/activations.html#hookscb.__init__',
                                                                             'miniai/activations.py'),
                                    'miniai.activations.HooksCB.__iter__': ( 'clean/activations.html#hookscb.__iter__',
                                                                             'miniai/activations.py'),
                                    'miniai.activations.HooksCB.__len__': ( 'clean/activations.html#hookscb.__len__',
                                                                            'miniai/activations.py'),
                                    'miniai.activations.HooksCB.after_fit': ( 'clean/activations.html#hookscb.after_fit',
                                                                              'miniai/activations.py'),
                                    'miniai.activations.HooksCB.before_fit': ( 'clean/activations.html#hookscb.before_fit',
                                                                               'miniai/activations.py'),
                                    'miniai.activations.HooksCB.hookfunc': ( 'clean/activations.html#hookscb.hookfunc',
                                                                             'miniai/activations.py'),
                                    'miniai.activations._model_iter': ('clean/activations.html#_model_iter', 'miniai/activations.py'),
                                    'miniai.activations.get_hist': ('clean/activations.html#get_hist', 'miniai/activations.py'),
                                    'miniai.activations.get_min': ('clean/activations.html#get_min', 'miniai/activations.py'),
                                    'miniai.activations.hook': ('clean/activations.html#hook', 'miniai/activations.py'),
                                    'miniai.activations.model_iter': ('clean/activations.html#model_iter', 'miniai/activations.py'),
                                    'miniai.activations.set_seed': ('clean/activations.html#set_seed', 'miniai/activations.py')},
            'miniai.activations_old': { 'miniai.activations_old.ActivationStats': ( 'activations.html#activationstats',
                                                                                    'miniai/activations_old.py'),
                                        'miniai.activations_old.ActivationStats.__init__': ( 'activations.html#activationstats.__init__',
                                                                                             'miniai/activations_old.py'),
                                        'miniai.activations_old.ActivationStats.color_dim': ( 'activations.html#activationstats.color_dim',
                                                                                              'miniai/activations_old.py'),
                                        'miniai.activations_old.ActivationStats.dead_chart': ( 'activations.html#activationstats.dead_chart',
                                                                                               'miniai/activations_old.py'),
                                        'miniai.activations_old.ActivationStats.plot_stats': ( 'activations.html#activationstats.plot_stats',
                                                                                               'miniai/activations_old.py'),
                                        'miniai.activations_old.Hook': ('activations.html#hook', 'miniai/activations_old.py'),
                                        'miniai.activations_old.Hook.__del__': ( 'activations.html#hook.__del__',
                                                                                 'miniai/activations_old.py'),
                                        'miniai.activations_old.Hook.__init__': ( 'activations.html#hook.__init__',
                                                                                  'miniai/activations_old.py'),
                                        'miniai.activations_old.Hook.remove': ('activations.html#hook.remove', 'miniai/activations_old.py'),
                                        'miniai.activations_old.Hooks': ('activations.html#hooks', 'miniai/activations_old.py'),
                                        'miniai.activations_old.Hooks.__del__': ( 'activations.html#hooks.__del__',
                                                                                  'miniai/activations_old.py'),
                                        'miniai.activations_old.Hooks.__delitem__': ( 'activations.html#hooks.__delitem__',
                                                                                      'miniai/activations_old.py'),
                                        'miniai.activations_old.Hooks.__enter__': ( 'activations.html#hooks.__enter__',
                                                                                    'miniai/activations_old.py'),
                                        'miniai.activations_old.Hooks.__exit__': ( 'activations.html#hooks.__exit__',
                                                                                   'miniai/activations_old.py'),
                                        'miniai.activations_old.Hooks.__init__': ( 'activations.html#hooks.__init__',
                                                                                   'miniai/activations_old.py'),
                                        'miniai.activations_old.Hooks.remove': ( 'activations.html#hooks.remove',
                                                                                 'miniai/activations_old.py'),
                                        'miniai.activations_old.HooksCallback': ( 'activations.html#hookscallback',
                                                                                  'miniai/activations_old.py'),
                                        'miniai.activations_old.HooksCallback.__init__': ( 'activations.html#hookscallback.__init__',
                                                                                           'miniai/activations_old.py'),
                                        'miniai.activations_old.HooksCallback.__iter__': ( 'activations.html#hookscallback.__iter__',
                                                                                           'miniai/activations_old.py'),
                                        'miniai.activations_old.HooksCallback.__len__': ( 'activations.html#hookscallback.__len__',
                                                                                          'miniai/activations_old.py'),
                                        'miniai.activations_old.HooksCallback._hookfunc': ( 'activations.html#hookscallback._hookfunc',
                                                                                            'miniai/activations_old.py'),
                                        'miniai.activations_old.HooksCallback.after_fit': ( 'activations.html#hookscallback.after_fit',
                                                                                            'miniai/activations_old.py'),
                                        'miniai.activations_old.HooksCallback.before_fit': ( 'activations.html#hookscallback.before_fit',
                                                                                             'miniai/activations_old.py'),
                                        'miniai.activations_old.append_stats': ( 'activations.html#append_stats',
                                                                                 'miniai/activations_old.py'),
                                        'miniai.activations_old.get_hist': ('activations.html#get_hist', 'miniai/activations_old.py'),
                                        'miniai.activations_old.get_min': ('activations.html#get_min', 'miniai/activations_old.py'),
                                        'miniai.activations_old.set_seed': ('activations.html#set_seed', 'miniai/activations_old.py')},
            'miniai.augment': { 'miniai.augment._flops': ('clean/augment.html#_flops', 'miniai/augment.py'),
                                'miniai.augment.summary': ('clean/augment.html#summary', 'miniai/augment.py')},
            'miniai.augment_old': { 'miniai.augment_old.CapturePreds': ('augment.html#capturepreds', 'miniai/augment_old.py'),
                                    'miniai.augment_old.CapturePreds.after_batch': ( 'augment.html#capturepreds.after_batch',
                                                                                     'miniai/augment_old.py'),
                                    'miniai.augment_old.CapturePreds.after_fit': ( 'augment.html#capturepreds.after_fit',
                                                                                   'miniai/augment_old.py'),
                                    'miniai.augment_old.CapturePreds.before_fit': ( 'augment.html#capturepreds.before_fit',
                                                                                    'miniai/augment_old.py'),
                                    'miniai.augment_old.RandCopy': ('augment.html#randcopy', 'miniai/augment_old.py'),
                                    'miniai.augment_old.RandCopy.__init__': ('augment.html#randcopy.__init__', 'miniai/augment_old.py'),
                                    'miniai.augment_old.RandCopy.forward': ('augment.html#randcopy.forward', 'miniai/augment_old.py'),
                                    'miniai.augment_old.RandErase': ('augment.html#randerase', 'miniai/augment_old.py'),
                                    'miniai.augment_old.RandErase.__init__': ('augment.html#randerase.__init__', 'miniai/augment_old.py'),
                                    'miniai.augment_old.RandErase.forward': ('augment.html#randerase.forward', 'miniai/augment_old.py'),
                                    'miniai.augment_old._flops': ('augment.html#_flops', 'miniai/augment_old.py'),
                                    'miniai.augment_old._rand_copy1': ('augment.html#_rand_copy1', 'miniai/augment_old.py'),
                                    'miniai.augment_old._rand_erase1': ('augment.html#_rand_erase1', 'miniai/augment_old.py'),
                                    'miniai.augment_old.capture_preds': ('augment.html#capture_preds', 'miniai/augment_old.py'),
                                    'miniai.augment_old.rand_copy': ('augment.html#rand_copy', 'miniai/augment_old.py'),
                                    'miniai.augment_old.rand_erase': ('augment.html#rand_erase', 'miniai/augment_old.py'),
                                    'miniai.augment_old.show_image_batch': ('augment.html#show_image_batch', 'miniai/augment_old.py'),
                                    'miniai.augment_old.summary': ('augment.html#summary', 'miniai/augment_old.py')},
            'miniai.conv': { 'miniai.conv.collate_device': ('clean/convolutions.html#collate_device', 'miniai/conv.py'),
                             'miniai.conv.conv': ('clean/convolutions.html#conv', 'miniai/conv.py'),
                             'miniai.conv.conv2d_col': ('clean/convolutions.html#conv2d_col', 'miniai/conv.py'),
                             'miniai.conv.im2col': ('clean/convolutions.html#im2col', 'miniai/conv.py'),
                             'miniai.conv.to_device': ('clean/convolutions.html#to_device', 'miniai/conv.py')},
            'miniai.conv_old': { 'miniai.conv_old.collate_device': ('convolutions.html#collate_device', 'miniai/conv_old.py'),
                                 'miniai.conv_old.conv': ('convolutions.html#conv', 'miniai/conv_old.py'),
                                 'miniai.conv_old.to_device': ('convolutions.html#to_device', 'miniai/conv_old.py')},
            'miniai.datasets': { 'miniai.datasets.DataLoaders': ('clean/datasets.html#dataloaders', 'miniai/datasets.py'),
                                 'miniai.datasets.DataLoaders.__init__': ('clean/datasets.html#dataloaders.__init__', 'miniai/datasets.py'),
                                 'miniai.datasets.DataLoaders.from_dd': ('clean/datasets.html#dataloaders.from_dd', 'miniai/datasets.py'),
                                 'miniai.datasets.collate_dict': ('clean/datasets.html#collate_dict', 'miniai/datasets.py'),
                                 'miniai.datasets.get_dls': ('clean/datasets.html#get_dls', 'miniai/datasets.py'),
                                 'miniai.datasets.get_grid': ('clean/datasets.html#get_grid', 'miniai/datasets.py'),
                                 'miniai.datasets.inplace': ('clean/datasets.html#inplace', 'miniai/datasets.py'),
                                 'miniai.datasets.show_image': ('clean/datasets.html#show_image', 'miniai/datasets.py'),
                                 'miniai.datasets.show_images': ('clean/datasets.html#show_images', 'miniai/datasets.py'),
                                 'miniai.datasets.subplots': ('clean/datasets.html#subplots', 'miniai/datasets.py')},
            'miniai.fid': { 'miniai.fid.ImageEval': ('fid.html#imageeval', 'miniai/fid.py'),
                            'miniai.fid.ImageEval.__init__': ('fid.html#imageeval.__init__', 'miniai/fid.py'),
                            'miniai.fid.ImageEval.fid': ('fid.html#imageeval.fid', 'miniai/fid.py'),
                            'miniai.fid.ImageEval.get_feats': ('fid.html#imageeval.get_feats', 'miniai/fid.py'),
                            'miniai.fid.ImageEval.kid': ('fid.html#imageeval.kid', 'miniai/fid.py'),
                            'miniai.fid._calc_fid': ('fid.html#_calc_fid', 'miniai/fid.py'),
                            'miniai.fid._calc_kid': ('fid.html#_calc_kid', 'miniai/fid.py'),
                            'miniai.fid._calc_stats': ('fid.html#_calc_stats', 'miniai/fid.py'),
                            'miniai.fid._sqrtm_newton_schulz': ('fid.html#_sqrtm_newton_schulz', 'miniai/fid.py'),
                            'miniai.fid._squared_mmd': ('fid.html#_squared_mmd', 'miniai/fid.py')},
            'miniai.init': { 'miniai.init.BatchTfmCB': ('clean/initializing.html#batchtfmcb', 'miniai/init.py'),
                             'miniai.init.BatchTfmCB.__init__': ('clean/initializing.html#batchtfmcb.__init__', 'miniai/init.py'),
                             'miniai.init.BatchTfmCB.before_batch': ('clean/initializing.html#batchtfmcb.before_batch', 'miniai/init.py'),
                             'miniai.init.GeneralReLU': ('clean/initializing.html#generalrelu', 'miniai/init.py'),
                             'miniai.init.GeneralReLU.__init__': ('clean/initializing.html#generalrelu.__init__', 'miniai/init.py'),
                             'miniai.init.GeneralReLU.forward': ('clean/initializing.html#generalrelu.forward', 'miniai/init.py'),
                             'miniai.init.LSUVInitCB': ('clean/initializing.html#lsuvinitcb', 'miniai/init.py'),
                             'miniai.init.LSUVInitCB.__init__': ('clean/initializing.html#lsuvinitcb.__init__', 'miniai/init.py'),
                             'miniai.init.LSUVInitCB.before_fit': ('clean/initializing.html#lsuvinitcb.before_fit', 'miniai/init.py'),
                             'miniai.init.clean_ipython_hist': ('clean/initializing.html#clean_ipython_hist', 'miniai/init.py'),
                             'miniai.init.clean_mem': ('clean/initializing.html#clean_mem', 'miniai/init.py'),
                             'miniai.init.clean_tb': ('clean/initializing.html#clean_tb', 'miniai/init.py'),
                             'miniai.init.conv': ('clean/initializing.html#conv', 'miniai/init.py'),
                             'miniai.init.get_model': ('clean/initializing.html#get_model', 'miniai/init.py'),
                             'miniai.init.init_weights': ('clean/initializing.html#init_weights', 'miniai/init.py'),
                             'miniai.init.lsuv_init': ('clean/initializing.html#lsuv_init', 'miniai/init.py'),
                             'miniai.init.lsuv_stats': ('clean/initializing.html#lsuv_stats', 'miniai/init.py'),
                             'miniai.init.plot_func': ('clean/initializing.html#plot_func', 'miniai/init.py')},
            'miniai.init_old': { 'miniai.init_old.BatchTransformCB': ('initializing.html#batchtransformcb', 'miniai/init_old.py'),
                                 'miniai.init_old.BatchTransformCB.__init__': ( 'initializing.html#batchtransformcb.__init__',
                                                                                'miniai/init_old.py'),
                                 'miniai.init_old.BatchTransformCB.before_batch': ( 'initializing.html#batchtransformcb.before_batch',
                                                                                    'miniai/init_old.py'),
                                 'miniai.init_old.GeneralRelu': ('initializing.html#generalrelu', 'miniai/init_old.py'),
                                 'miniai.init_old.GeneralRelu.__init__': ('initializing.html#generalrelu.__init__', 'miniai/init_old.py'),
                                 'miniai.init_old.GeneralRelu.forward': ('initializing.html#generalrelu.forward', 'miniai/init_old.py'),
                                 'miniai.init_old._lsuv_stats': ('initializing.html#_lsuv_stats', 'miniai/init_old.py'),
                                 'miniai.init_old.clean_ipython_hist': ('initializing.html#clean_ipython_hist', 'miniai/init_old.py'),
                                 'miniai.init_old.clean_mem': ('initializing.html#clean_mem', 'miniai/init_old.py'),
                                 'miniai.init_old.clean_tb': ('initializing.html#clean_tb', 'miniai/init_old.py'),
                                 'miniai.init_old.conv': ('initializing.html#conv', 'miniai/init_old.py'),
                                 'miniai.init_old.get_model': ('initializing.html#get_model', 'miniai/init_old.py'),
                                 'miniai.init_old.init_weights': ('initializing.html#init_weights', 'miniai/init_old.py'),
                                 'miniai.init_old.lsuv_init': ('initializing.html#lsuv_init', 'miniai/init_old.py'),
                                 'miniai.init_old.plot_func': ('initializing.html#plot_func', 'miniai/init_old.py')},
            'miniai.learner': { 'miniai.learner.Callback': ('clean/learner.html#callback', 'miniai/learner.py'),
                                'miniai.learner.Callback.after_batch': ('clean/learner.html#callback.after_batch', 'miniai/learner.py'),
                                'miniai.learner.Callback.after_epoch': ('clean/learner.html#callback.after_epoch', 'miniai/learner.py'),
                                'miniai.learner.Callback.after_fit': ('clean/learner.html#callback.after_fit', 'miniai/learner.py'),
                                'miniai.learner.Callback.before_batch': ('clean/learner.html#callback.before_batch', 'miniai/learner.py'),
                                'miniai.learner.Callback.before_epoch': ('clean/learner.html#callback.before_epoch', 'miniai/learner.py'),
                                'miniai.learner.Callback.before_fit': ('clean/learner.html#callback.before_fit', 'miniai/learner.py'),
                                'miniai.learner.CancelBatchException': ('clean/learner.html#cancelbatchexception', 'miniai/learner.py'),
                                'miniai.learner.CancelEpochException': ('clean/learner.html#cancelepochexception', 'miniai/learner.py'),
                                'miniai.learner.CancelFitException': ('clean/learner.html#cancelfitexception', 'miniai/learner.py'),
                                'miniai.learner.Config': ('clean/learner.html#config', 'miniai/learner.py'),
                                'miniai.learner.Config.__getattr__': ('clean/learner.html#config.__getattr__', 'miniai/learner.py'),
                                'miniai.learner.Config.__init__': ('clean/learner.html#config.__init__', 'miniai/learner.py'),
                                'miniai.learner.DeviceCB': ('clean/learner.html#devicecb', 'miniai/learner.py'),
                                'miniai.learner.DeviceCB.__init__': ('clean/learner.html#devicecb.__init__', 'miniai/learner.py'),
                                'miniai.learner.DeviceCB.before_batch': ('clean/learner.html#devicecb.before_batch', 'miniai/learner.py'),
                                'miniai.learner.DeviceCB.before_fit': ('clean/learner.html#devicecb.before_fit', 'miniai/learner.py'),
                                'miniai.learner.LRFinderCB': ('clean/learner.html#lrfindercb', 'miniai/learner.py'),
                                'miniai.learner.LRFinderCB.__init__': ('clean/learner.html#lrfindercb.__init__', 'miniai/learner.py'),
                                'miniai.learner.LRFinderCB.after_batch': ('clean/learner.html#lrfindercb.after_batch', 'miniai/learner.py'),
                                'miniai.learner.LRFinderCB.before_fit': ('clean/learner.html#lrfindercb.before_fit', 'miniai/learner.py'),
                                'miniai.learner.LRFinderCB.cleanup_fit': ('clean/learner.html#lrfindercb.cleanup_fit', 'miniai/learner.py'),
                                'miniai.learner.Learner': ('clean/learner.html#learner', 'miniai/learner.py'),
                                'miniai.learner.Learner.__init__': ('clean/learner.html#learner.__init__', 'miniai/learner.py'),
                                'miniai.learner.Learner._callback': ('clean/learner.html#learner._callback', 'miniai/learner.py'),
                                'miniai.learner.Learner._fit': ('clean/learner.html#learner._fit', 'miniai/learner.py'),
                                'miniai.learner.Learner._one_epoch': ('clean/learner.html#learner._one_epoch', 'miniai/learner.py'),
                                'miniai.learner.Learner.backward': ('clean/learner.html#learner.backward', 'miniai/learner.py'),
                                'miniai.learner.Learner.fit': ('clean/learner.html#learner.fit', 'miniai/learner.py'),
                                'miniai.learner.Learner.get_loss': ('clean/learner.html#learner.get_loss', 'miniai/learner.py'),
                                'miniai.learner.Learner.one_batch': ('clean/learner.html#learner.one_batch', 'miniai/learner.py'),
                                'miniai.learner.Learner.one_epoch': ('clean/learner.html#learner.one_epoch', 'miniai/learner.py'),
                                'miniai.learner.Learner.predict': ('clean/learner.html#learner.predict', 'miniai/learner.py'),
                                'miniai.learner.Learner.step': ('clean/learner.html#learner.step', 'miniai/learner.py'),
                                'miniai.learner.Learner.training': ('clean/learner.html#learner.training', 'miniai/learner.py'),
                                'miniai.learner.Learner.zero_grad': ('clean/learner.html#learner.zero_grad', 'miniai/learner.py'),
                                'miniai.learner.M': ('clean/learner.html#m', 'miniai/learner.py'),
                                'miniai.learner.M.__init__': ('clean/learner.html#m.__init__', 'miniai/learner.py'),
                                'miniai.learner.MetricsCB': ('clean/learner.html#metricscb', 'miniai/learner.py'),
                                'miniai.learner.MetricsCB.__init__': ('clean/learner.html#metricscb.__init__', 'miniai/learner.py'),
                                'miniai.learner.MetricsCB._log': ('clean/learner.html#metricscb._log', 'miniai/learner.py'),
                                'miniai.learner.MetricsCB.after_batch': ('clean/learner.html#metricscb.after_batch', 'miniai/learner.py'),
                                'miniai.learner.MetricsCB.after_epoch': ('clean/learner.html#metricscb.after_epoch', 'miniai/learner.py'),
                                'miniai.learner.MetricsCB.before_epoch': ('clean/learner.html#metricscb.before_epoch', 'miniai/learner.py'),
                                'miniai.learner.MetricsCB.before_fit': ('clean/learner.html#metricscb.before_fit', 'miniai/learner.py'),
                                'miniai.learner.MomentumLearner': ('clean/learner.html#momentumlearner', 'miniai/learner.py'),
                                'miniai.learner.MomentumLearner.__init__': ( 'clean/learner.html#momentumlearner.__init__',
                                                                             'miniai/learner.py'),
                                'miniai.learner.MomentumLearner.zero_grad': ( 'clean/learner.html#momentumlearner.zero_grad',
                                                                              'miniai/learner.py'),
                                'miniai.learner.ProgressCB': ('clean/learner.html#progresscb', 'miniai/learner.py'),
                                'miniai.learner.ProgressCB.__init__': ('clean/learner.html#progresscb.__init__', 'miniai/learner.py'),
                                'miniai.learner.ProgressCB._log': ('clean/learner.html#progresscb._log', 'miniai/learner.py'),
                                'miniai.learner.ProgressCB.after_batch': ('clean/learner.html#progresscb.after_batch', 'miniai/learner.py'),
                                'miniai.learner.ProgressCB.before_epoch': ( 'clean/learner.html#progresscb.before_epoch',
                                                                            'miniai/learner.py'),
                                'miniai.learner.ProgressCB.before_fit': ('clean/learner.html#progresscb.before_fit', 'miniai/learner.py'),
                                'miniai.learner.Recorder': ('clean/learner.html#recorder', 'miniai/learner.py'),
                                'miniai.learner.Recorder.__init__': ('clean/learner.html#recorder.__init__', 'miniai/learner.py'),
                                'miniai.learner.Recorder.add': ('clean/learner.html#recorder.add', 'miniai/learner.py'),
                                'miniai.learner.Recorder.get_latest': ('clean/learner.html#recorder.get_latest', 'miniai/learner.py'),
                                'miniai.learner.Recorder.log_latest': ('clean/learner.html#recorder.log_latest', 'miniai/learner.py'),
                                'miniai.learner.SingleBatchCB': ('clean/learner.html#singlebatchcb', 'miniai/learner.py'),
                                'miniai.learner.SingleBatchCB.__init__': ('clean/learner.html#singlebatchcb.__init__', 'miniai/learner.py'),
                                'miniai.learner.SingleBatchCB.after_batch': ( 'clean/learner.html#singlebatchcb.after_batch',
                                                                              'miniai/learner.py'),
                                'miniai.learner.TensorboardCB': ('clean/learner.html#tensorboardcb', 'miniai/learner.py'),
                                'miniai.learner.TensorboardCB.__init__': ('clean/learner.html#tensorboardcb.__init__', 'miniai/learner.py'),
                                'miniai.learner.TensorboardCB.after_batch': ( 'clean/learner.html#tensorboardcb.after_batch',
                                                                              'miniai/learner.py'),
                                'miniai.learner.TensorboardCB.after_epoch': ( 'clean/learner.html#tensorboardcb.after_epoch',
                                                                              'miniai/learner.py'),
                                'miniai.learner.TensorboardCB.after_fit': ( 'clean/learner.html#tensorboardcb.after_fit',
                                                                            'miniai/learner.py'),
                                'miniai.learner.WandBCB': ('clean/learner.html#wandbcb', 'miniai/learner.py'),
                                'miniai.learner.WandBCB.__init__': ('clean/learner.html#wandbcb.__init__', 'miniai/learner.py'),
                                'miniai.learner.WandBCB.after_batch': ('clean/learner.html#wandbcb.after_batch', 'miniai/learner.py'),
                                'miniai.learner.WandBCB.after_epoch': ('clean/learner.html#wandbcb.after_epoch', 'miniai/learner.py'),
                                'miniai.learner.WandBCB.after_fit': ('clean/learner.html#wandbcb.after_fit', 'miniai/learner.py'),
                                'miniai.learner.WandBCB.before_fit': ('clean/learner.html#wandbcb.before_fit', 'miniai/learner.py'),
                                'miniai.learner.lr_find': ('clean/learner.html#lr_find', 'miniai/learner.py'),
                                'miniai.learner.run_cbs': ('clean/learner.html#run_cbs', 'miniai/learner.py'),
                                'miniai.learner.to_cpu': ('clean/learner.html#to_cpu', 'miniai/learner.py'),
                                'miniai.learner.with_cbs': ('clean/learner.html#with_cbs', 'miniai/learner.py'),
                                'miniai.learner.with_cbs.__call__': ('clean/learner.html#with_cbs.__call__', 'miniai/learner.py'),
                                'miniai.learner.with_cbs.__init__': ('clean/learner.html#with_cbs.__init__', 'miniai/learner.py')},
            'miniai.learner_old': { 'miniai.learner_old.Callback': ('learner.html#callback', 'miniai/learner_old.py'),
                                    'miniai.learner_old.CancelBatchException': ( 'learner.html#cancelbatchexception',
                                                                                 'miniai/learner_old.py'),
                                    'miniai.learner_old.CancelEpochException': ( 'learner.html#cancelepochexception',
                                                                                 'miniai/learner_old.py'),
                                    'miniai.learner_old.CancelFitException': ('learner.html#cancelfitexception', 'miniai/learner_old.py'),
                                    'miniai.learner_old.DeviceCB': ('learner.html#devicecb', 'miniai/learner_old.py'),
                                    'miniai.learner_old.DeviceCB.__init__': ('learner.html#devicecb.__init__', 'miniai/learner_old.py'),
                                    'miniai.learner_old.DeviceCB.before_batch': ( 'learner.html#devicecb.before_batch',
                                                                                  'miniai/learner_old.py'),
                                    'miniai.learner_old.DeviceCB.before_fit': ('learner.html#devicecb.before_fit', 'miniai/learner_old.py'),
                                    'miniai.learner_old.LRFinderCB': ('learner.html#lrfindercb', 'miniai/learner_old.py'),
                                    'miniai.learner_old.LRFinderCB.__init__': ('learner.html#lrfindercb.__init__', 'miniai/learner_old.py'),
                                    'miniai.learner_old.LRFinderCB.after_batch': ( 'learner.html#lrfindercb.after_batch',
                                                                                   'miniai/learner_old.py'),
                                    'miniai.learner_old.LRFinderCB.before_fit': ( 'learner.html#lrfindercb.before_fit',
                                                                                  'miniai/learner_old.py'),
                                    'miniai.learner_old.LRFinderCB.cleanup_fit': ( 'learner.html#lrfindercb.cleanup_fit',
                                                                                   'miniai/learner_old.py'),
                                    'miniai.learner_old.Learner': ('learner.html#learner', 'miniai/learner_old.py'),
                                    'miniai.learner_old.Learner.__getattr__': ('learner.html#learner.__getattr__', 'miniai/learner_old.py'),
                                    'miniai.learner_old.Learner.__init__': ('learner.html#learner.__init__', 'miniai/learner_old.py'),
                                    'miniai.learner_old.Learner._fit': ('learner.html#learner._fit', 'miniai/learner_old.py'),
                                    'miniai.learner_old.Learner._one_batch': ('learner.html#learner._one_batch', 'miniai/learner_old.py'),
                                    'miniai.learner_old.Learner._one_epoch': ('learner.html#learner._one_epoch', 'miniai/learner_old.py'),
                                    'miniai.learner_old.Learner.callback': ('learner.html#learner.callback', 'miniai/learner_old.py'),
                                    'miniai.learner_old.Learner.fit': ('learner.html#learner.fit', 'miniai/learner_old.py'),
                                    'miniai.learner_old.Learner.one_epoch': ('learner.html#learner.one_epoch', 'miniai/learner_old.py'),
                                    'miniai.learner_old.Learner.training': ('learner.html#learner.training', 'miniai/learner_old.py'),
                                    'miniai.learner_old.MetricsCB': ('learner.html#metricscb', 'miniai/learner_old.py'),
                                    'miniai.learner_old.MetricsCB.__init__': ('learner.html#metricscb.__init__', 'miniai/learner_old.py'),
                                    'miniai.learner_old.MetricsCB._log': ('learner.html#metricscb._log', 'miniai/learner_old.py'),
                                    'miniai.learner_old.MetricsCB.after_batch': ( 'learner.html#metricscb.after_batch',
                                                                                  'miniai/learner_old.py'),
                                    'miniai.learner_old.MetricsCB.after_epoch': ( 'learner.html#metricscb.after_epoch',
                                                                                  'miniai/learner_old.py'),
                                    'miniai.learner_old.MetricsCB.before_epoch': ( 'learner.html#metricscb.before_epoch',
                                                                                   'miniai/learner_old.py'),
                                    'miniai.learner_old.MetricsCB.before_fit': ( 'learner.html#metricscb.before_fit',
                                                                                 'miniai/learner_old.py'),
                                    'miniai.learner_old.MomentumLearner': ('learner.html#momentumlearner', 'miniai/learner_old.py'),
                                    'miniai.learner_old.MomentumLearner.__init__': ( 'learner.html#momentumlearner.__init__',
                                                                                     'miniai/learner_old.py'),
                                    'miniai.learner_old.MomentumLearner.zero_grad': ( 'learner.html#momentumlearner.zero_grad',
                                                                                      'miniai/learner_old.py'),
                                    'miniai.learner_old.ProgressCB': ('learner.html#progresscb', 'miniai/learner_old.py'),
                                    'miniai.learner_old.ProgressCB.__init__': ('learner.html#progresscb.__init__', 'miniai/learner_old.py'),
                                    'miniai.learner_old.ProgressCB._log': ('learner.html#progresscb._log', 'miniai/learner_old.py'),
                                    'miniai.learner_old.ProgressCB.after_batch': ( 'learner.html#progresscb.after_batch',
                                                                                   'miniai/learner_old.py'),
                                    'miniai.learner_old.ProgressCB.before_epoch': ( 'learner.html#progresscb.before_epoch',
                                                                                    'miniai/learner_old.py'),
                                    'miniai.learner_old.ProgressCB.before_fit': ( 'learner.html#progresscb.before_fit',
                                                                                  'miniai/learner_old.py'),
                                    'miniai.learner_old.SingleBatchCB': ('learner.html#singlebatchcb', 'miniai/learner_old.py'),
                                    'miniai.learner_old.SingleBatchCB.after_batch': ( 'learner.html#singlebatchcb.after_batch',
                                                                                      'miniai/learner_old.py'),
                                    'miniai.learner_old.TrainCB': ('learner.html#traincb', 'miniai/learner_old.py'),
                                    'miniai.learner_old.TrainCB.__init__': ('learner.html#traincb.__init__', 'miniai/learner_old.py'),
                                    'miniai.learner_old.TrainCB.backward': ('learner.html#traincb.backward', 'miniai/learner_old.py'),
                                    'miniai.learner_old.TrainCB.get_loss': ('learner.html#traincb.get_loss', 'miniai/learner_old.py'),
                                    'miniai.learner_old.TrainCB.predict': ('learner.html#traincb.predict', 'miniai/learner_old.py'),
                                    'miniai.learner_old.TrainCB.step': ('learner.html#traincb.step', 'miniai/learner_old.py'),
                                    'miniai.learner_old.TrainCB.zero_grad': ('learner.html#traincb.zero_grad', 'miniai/learner_old.py'),
                                    'miniai.learner_old.TrainLearner': ('learner.html#trainlearner', 'miniai/learner_old.py'),
                                    'miniai.learner_old.TrainLearner.backward': ( 'learner.html#trainlearner.backward',
                                                                                  'miniai/learner_old.py'),
                                    'miniai.learner_old.TrainLearner.get_loss': ( 'learner.html#trainlearner.get_loss',
                                                                                  'miniai/learner_old.py'),
                                    'miniai.learner_old.TrainLearner.predict': ( 'learner.html#trainlearner.predict',
                                                                                 'miniai/learner_old.py'),
                                    'miniai.learner_old.TrainLearner.step': ('learner.html#trainlearner.step', 'miniai/learner_old.py'),
                                    'miniai.learner_old.TrainLearner.zero_grad': ( 'learner.html#trainlearner.zero_grad',
                                                                                   'miniai/learner_old.py'),
                                    'miniai.learner_old.lr_find': ('learner.html#lr_find', 'miniai/learner_old.py'),
                                    'miniai.learner_old.run_cbs': ('learner.html#run_cbs', 'miniai/learner_old.py'),
                                    'miniai.learner_old.to_cpu': ('learner.html#to_cpu', 'miniai/learner_old.py'),
                                    'miniai.learner_old.with_cbs': ('learner.html#with_cbs', 'miniai/learner_old.py'),
                                    'miniai.learner_old.with_cbs.__call__': ('learner.html#with_cbs.__call__', 'miniai/learner_old.py'),
                                    'miniai.learner_old.with_cbs.__init__': ('learner.html#with_cbs.__init__', 'miniai/learner_old.py')},
            'miniai.resnet': { 'miniai.resnet.ResBlock': ('clean/resnet.html#resblock', 'miniai/resnet.py'),
                               'miniai.resnet.ResBlock.__init__': ('clean/resnet.html#resblock.__init__', 'miniai/resnet.py'),
                               'miniai.resnet.ResBlock.forward': ('clean/resnet.html#resblock.forward', 'miniai/resnet.py'),
                               'miniai.resnet._conv_block': ('clean/resnet.html#_conv_block', 'miniai/resnet.py')},
            'miniai.resnet_old': { 'miniai.resnet_old.ResBlock': ('resnet.html#resblock', 'miniai/resnet_old.py'),
                                   'miniai.resnet_old.ResBlock.__init__': ('resnet.html#resblock.__init__', 'miniai/resnet_old.py'),
                                   'miniai.resnet_old.ResBlock.forward': ('resnet.html#resblock.forward', 'miniai/resnet_old.py'),
                                   'miniai.resnet_old._conv_block': ('resnet.html#_conv_block', 'miniai/resnet_old.py')},
            'miniai.sgd': { 'miniai.sgd.BaseSchedulerCB': ('clean/accel_sgd.html#baseschedulercb', 'miniai/sgd.py'),
                            'miniai.sgd.BaseSchedulerCB.__init__': ('clean/accel_sgd.html#baseschedulercb.__init__', 'miniai/sgd.py'),
                            'miniai.sgd.BaseSchedulerCB._step': ('clean/accel_sgd.html#baseschedulercb._step', 'miniai/sgd.py'),
                            'miniai.sgd.BaseSchedulerCB.before_fit': ('clean/accel_sgd.html#baseschedulercb.before_fit', 'miniai/sgd.py'),
                            'miniai.sgd.BatchSchedCB': ('clean/accel_sgd.html#batchschedcb', 'miniai/sgd.py'),
                            'miniai.sgd.BatchSchedCB.after_batch': ('clean/accel_sgd.html#batchschedcb.after_batch', 'miniai/sgd.py'),
                            'miniai.sgd.EpochSchedulerCB': ('clean/accel_sgd.html#epochschedulercb', 'miniai/sgd.py'),
                            'miniai.sgd.EpochSchedulerCB.after_epoch': ( 'clean/accel_sgd.html#epochschedulercb.after_epoch',
                                                                         'miniai/sgd.py'),
                            'miniai.sgd.RecorderCB': ('clean/accel_sgd.html#recordercb', 'miniai/sgd.py'),
                            'miniai.sgd.RecorderCB.__init__': ('clean/accel_sgd.html#recordercb.__init__', 'miniai/sgd.py'),
                            'miniai.sgd.RecorderCB.after_batch': ('clean/accel_sgd.html#recordercb.after_batch', 'miniai/sgd.py'),
                            'miniai.sgd.RecorderCB.before_fit': ('clean/accel_sgd.html#recordercb.before_fit', 'miniai/sgd.py'),
                            'miniai.sgd.RecorderCB.plot': ('clean/accel_sgd.html#recordercb.plot', 'miniai/sgd.py')},
            'miniai.sgd_old': { 'miniai.sgd_old.BaseSchedCB': ('accel_sgd.html#baseschedcb', 'miniai/sgd_old.py'),
                                'miniai.sgd_old.BaseSchedCB.__init__': ('accel_sgd.html#baseschedcb.__init__', 'miniai/sgd_old.py'),
                                'miniai.sgd_old.BaseSchedCB._step': ('accel_sgd.html#baseschedcb._step', 'miniai/sgd_old.py'),
                                'miniai.sgd_old.BaseSchedCB.before_fit': ('accel_sgd.html#baseschedcb.before_fit', 'miniai/sgd_old.py'),
                                'miniai.sgd_old.BatchSchedCB': ('accel_sgd.html#batchschedcb', 'miniai/sgd_old.py'),
                                'miniai.sgd_old.BatchSchedCB.after_batch': ('accel_sgd.html#batchschedcb.after_batch', 'miniai/sgd_old.py'),
                                'miniai.sgd_old.EpochSchedCB': ('accel_sgd.html#epochschedcb', 'miniai/sgd_old.py'),
                                'miniai.sgd_old.EpochSchedCB.after_epoch': ('accel_sgd.html#epochschedcb.after_epoch', 'miniai/sgd_old.py'),
                                'miniai.sgd_old.HasLearnCB': ('accel_sgd.html#haslearncb', 'miniai/sgd_old.py'),
                                'miniai.sgd_old.HasLearnCB.after_fit': ('accel_sgd.html#haslearncb.after_fit', 'miniai/sgd_old.py'),
                                'miniai.sgd_old.HasLearnCB.before_fit': ('accel_sgd.html#haslearncb.before_fit', 'miniai/sgd_old.py'),
                                'miniai.sgd_old.RecorderCB': ('accel_sgd.html#recordercb', 'miniai/sgd_old.py'),
                                'miniai.sgd_old.RecorderCB.__init__': ('accel_sgd.html#recordercb.__init__', 'miniai/sgd_old.py'),
                                'miniai.sgd_old.RecorderCB.after_batch': ('accel_sgd.html#recordercb.after_batch', 'miniai/sgd_old.py'),
                                'miniai.sgd_old.RecorderCB.before_fit': ('accel_sgd.html#recordercb.before_fit', 'miniai/sgd_old.py'),
                                'miniai.sgd_old.RecorderCB.plot': ('accel_sgd.html#recordercb.plot', 'miniai/sgd_old.py')},
            'miniai.stability': {},
            'miniai.training': { 'miniai.training.Dataset': ('clean/minibatch.html#dataset', 'miniai/training.py'),
                                 'miniai.training.Dataset.__getitem__': ('clean/minibatch.html#dataset.__getitem__', 'miniai/training.py'),
                                 'miniai.training.Dataset.__init__': ('clean/minibatch.html#dataset.__init__', 'miniai/training.py'),
                                 'miniai.training.Dataset.__len__': ('clean/minibatch.html#dataset.__len__', 'miniai/training.py'),
                                 'miniai.training.accuracy': ('clean/minibatch.html#accuracy', 'miniai/training.py'),
                                 'miniai.training.fit': ('clean/minibatch.html#fit', 'miniai/training.py'),
                                 'miniai.training.get_dls': ('clean/minibatch.html#get_dls', 'miniai/training.py'),
                                 'miniai.training.report': ('clean/minibatch.html#report', 'miniai/training.py')},
            'miniai.training_old': { 'miniai.training_old.Dataset': ('minibatch_training.html#dataset', 'miniai/training_old.py'),
                                     'miniai.training_old.Dataset.__getitem__': ( 'minibatch_training.html#dataset.__getitem__',
                                                                                  'miniai/training_old.py'),
                                     'miniai.training_old.Dataset.__init__': ( 'minibatch_training.html#dataset.__init__',
                                                                               'miniai/training_old.py'),
                                     'miniai.training_old.Dataset.__len__': ( 'minibatch_training.html#dataset.__len__',
                                                                              'miniai/training_old.py'),
                                     'miniai.training_old.accuracy': ('minibatch_training.html#accuracy', 'miniai/training_old.py'),
                                     'miniai.training_old.fit': ('minibatch_training.html#fit', 'miniai/training_old.py'),
                                     'miniai.training_old.get_dls': ('minibatch_training.html#get_dls', 'miniai/training_old.py'),
                                     'miniai.training_old.report': ('minibatch_training.html#report', 'miniai/training_old.py')},
            'miniai.xformer': { 'miniai.xformer._model_iter': ('clean/transformer.html#_model_iter', 'miniai/xformer.py'),
                                'miniai.xformer.model_iter': ('clean/transformer.html#model_iter', 'miniai/xformer.py')}}}
