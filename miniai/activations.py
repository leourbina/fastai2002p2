# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/clean/10_activations.ipynb.

# %% ../nbs/clean/10_activations.ipynb 2
from __future__ import annotations
import math
import random
import torch
import numpy as np
import matplotlib.pyplot as plt
import fastcore.all as fc
from functools import partial

from .datasets import *
from .learner import * 

# %% auto 0
__all__ = ['set_seed', 'Hook', 'Hooks']

# %% ../nbs/clean/10_activations.ipynb 5
def set_seed(seed, deterministic=False):
    torch.use_deterministic_algorithms(deterministic)
    torch.manual_seed(seed)
    random.seed(seed)
    np.random.seed(seed)

# %% ../nbs/clean/10_activations.ipynb 26
class Hook():
    def __init__(self, m, f): self.hook = m.register_forward_hook(partial(f, self))
    def remove(self): self.hook.remove()
    def __del__(self): self.remove()

# %% ../nbs/clean/10_activations.ipynb 32
class Hooks(list):
    def __init__(self, ms, f): super().__init__([Hook(m, f) for m in ms])
    def __enter__(self, *args): return self

    def __exit__(self, *args): self.remove()
    def remove(self): 
        for h in self: h.remove()

    def __del__(self): self.remove()
    def __delitem__(self, i): 
        self[i].remove()
        super().__delitem__(i)
